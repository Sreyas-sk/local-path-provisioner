---
# Source: local-path-provisioner/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: local-path-provisioner-custom
  namespace: local-path-custom
  labels:
    app.kubernetes.io/name: local-path-provisioner
    helm.sh/chart: local-path-provisioner-0.0.31
    app.kubernetes.io/instance: local-path-provisioner-custom
    app.kubernetes.io/version: "v0.0.31"
    app.kubernetes.io/managed-by: Helm
imagePullSecrets:
---
# Source: local-path-provisioner/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: local-path-config
  namespace: local-path-custom
  labels:
    app.kubernetes.io/name: local-path-provisioner
    helm.sh/chart: local-path-provisioner-0.0.31
    app.kubernetes.io/instance: local-path-provisioner-custom
    app.kubernetes.io/version: "v0.0.31"
    app.kubernetes.io/managed-by: Helm
data:
  config.json: |-
    {
      "nodePathMap": [
        {
          "node": "DEFAULT_PATH_FOR_NON_LISTED_NODES",
          "paths": [
            "/mnt/s1"
          ]
        }
      ]
    }
  setup: |-
    #!/bin/sh
    set -eu
    mkdir -m 0777 -p "$VOL_DIR"
  teardown: |-
    #!/bin/sh
    set -eu
    rm -rf "$VOL_DIR"
  helperPod.yaml: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: helper-pod
      namespace: local-path-custom
    spec:
      priorityClassName: system-node-critical
      tolerations:
        - key: node.kubernetes.io/disk-pressure
          operator: Exists
          effect: NoSchedule
      containers:
        - name: helper-pod
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          resources:
            {}
---
# Source: local-path-provisioner/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-path-custom
  labels:
    app.kubernetes.io/name: local-path-provisioner
    helm.sh/chart: local-path-provisioner-0.0.31
    app.kubernetes.io/instance: local-path-provisioner-custom
    app.kubernetes.io/version: "v0.0.31"
    app.kubernetes.io/managed-by: Helm
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
    defaultVolumeType: "local"
provisioner: cluster.local/local-path-provisioner-custom
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
allowVolumeExpansion: true
parameters:
  pathPattern: "{{ .PVC.Namespace }}/{{ .PVC.Name }}"
---
# Source: local-path-provisioner/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: local-path-provisioner-custom
  labels:
    app.kubernetes.io/name: local-path-provisioner
    helm.sh/chart: local-path-provisioner-0.0.31
    app.kubernetes.io/instance: local-path-provisioner-custom
    app.kubernetes.io/version: "v0.0.31"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["nodes", "persistentvolumeclaims", "configmaps", "pods", "pods/log"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "patch", "update", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
---
# Source: local-path-provisioner/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: local-path-provisioner-custom
  labels:
    app.kubernetes.io/name: local-path-provisioner
    helm.sh/chart: local-path-provisioner-0.0.31
    app.kubernetes.io/instance: local-path-provisioner-custom
    app.kubernetes.io/version: "v0.0.31"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: local-path-provisioner-custom
subjects:
  - kind: ServiceAccount
    name: local-path-provisioner-custom
    namespace: local-path-custom
---
# Source: local-path-provisioner/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: local-path-provisioner-custom
  namespace: local-path-custom
  labels:
    app.kubernetes.io/name: local-path-provisioner
    helm.sh/chart: local-path-provisioner-0.0.31
    app.kubernetes.io/instance: local-path-provisioner-custom
    app.kubernetes.io/version: "v0.0.31"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "create", "patch", "update", "delete"]
---
# Source: local-path-provisioner/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: local-path-provisioner-custom
  namespace: local-path-custom
  labels:
    app.kubernetes.io/name: local-path-provisioner
    helm.sh/chart: local-path-provisioner-0.0.31
    app.kubernetes.io/instance: local-path-provisioner-custom
    app.kubernetes.io/version: "v0.0.31"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: local-path-provisioner-custom
subjects:
  - kind: ServiceAccount
    name: local-path-provisioner-custom
    namespace: local-path-custom
---
# Source: local-path-provisioner/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-path-provisioner-custom
  namespace: local-path-custom
  labels:
    app.kubernetes.io/name: local-path-provisioner
    helm.sh/chart: local-path-provisioner-0.0.31
    app.kubernetes.io/instance: local-path-provisioner-custom
    app.kubernetes.io/version: "v0.0.31"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: local-path-provisioner
      app.kubernetes.io/instance: local-path-provisioner-custom
  template:
    metadata:
      labels:
        app.kubernetes.io/name: local-path-provisioner
        helm.sh/chart: local-path-provisioner-0.0.31
        app.kubernetes.io/instance: local-path-provisioner-custom
        app.kubernetes.io/version: "v0.0.31"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: local-path-provisioner-custom
      securityContext:
        {}
      containers:
        - name: local-path-provisioner
          securityContext:
            {}
          image: "rancher/local-path-provisioner:v0.0.31"
          imagePullPolicy: IfNotPresent
          command:
            - local-path-provisioner
            - --debug
            - start
            - --config
            - /etc/config/config.json
            - --service-account-name
            - local-path-provisioner-custom
            - --provisioner-name
            - cluster.local/local-path-provisioner-custom
            - --helper-image
            - "busybox:latest"
            - --configmap-name
            - local-path-config
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config/
          env:
            - name: POD_NAMESPACE
              value: local-path-custom
            - name: CONFIG_MOUNT_PATH
              value: /etc/config/
          resources:
            {}
      volumes:
        - name: config-volume
          configMap:
            name: local-path-config

